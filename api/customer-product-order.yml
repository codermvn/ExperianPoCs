openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/self7648/Order-Customer-Product/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/self7648/Order-Customer/1.0.0
info:
  description: This is a simple API
  version: "1.0.0"
  title: Simple Inventory API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: customers
    description: Operations for add update or delete customers
  - name: orders
    description: Operations for add update or delete customer orders
paths:
  /createOrder/{customerId}:
    post:
      tags:
        - orders
      summary: create Order
      description: |
        create Order
      parameters:
      -  name: customerId
         in: path
         required: true
         schema:
            type: integer  
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDetails'
        description: Customer Order to add  
      responses:
        '201':
          description: Customer Order added
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: Customer Order already exists
          
  /getOrder/{orderId}:
    get:
      tags:
        - orders
      summary: get customer By orderId
      description: |
        you can delete customer by orderId
        
      # Path Param
      parameters:
      -  name: orderId
         in: path
         required: true
         schema:
            type: integer
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Order'
          
  /deleteOrder/{orderId}:
    delete:
      tags:
        - orders
      summary: delete customer By orderId
      description: |
        you can delete customer by orderId
        
      # Path Param
      parameters:
      -  name: orderId
         in: path
         required: true
         schema:
            type: integer
      responses:
        '200':
          description: Order deleted
        '400':
          description: bad input parameter
          
  /createCustomer:
    post:
      tags:
        - customers
      summary: create customer
      description: |
        create customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        description: Customer to add  
      responses:
        '200':
          description: Customer added
        '400':
          description: invalid input, object invalid
        '409':
          description: Customer already exists
          
  /getCustomer/{customerId}:
    get:
      tags:
        - customers
      summary: get customer By customerId
      description: |
        you can get customer by customerId
        
      # Path Param
      parameters:
      -  name: customerId
         in: path
         required: true
         schema:
            type: integer
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Order'
        '404':
          description: bad input parameter
  /debit/{customerId}:
    post:
      tags:
        - customers
      summary: debit amount
      description: |
        debit amount
      # Path Param
      parameters:
      -  name: customerId
         in: path
         required: true
         schema:
            type: integer  
      requestBody:
        content:
          application/json:
            schema:
                  $ref: '#/components/schemas/Amount'
        description: amount to be debited  
      responses:
        '200':
          description: amount debited
        '400':
          description: invalid input, object invalid 
  /credit/{customerId}:
    post:
      tags:
        - customers
      summary: credit amount
      description: |
        credit amount
      # Path Param
      parameters:
      -  name: customerId
         in: path
         required: true
         schema:
            type: integer  
      requestBody:
        content:
          application/json:
            schema:
                  $ref: '#/components/schemas/Amount'
        description: amount to be credited  
      responses:
        '200':
          description: amount credited
        '400':
          description: invalid input, object invalid        
components:
  schemas:
    Product:
      type: object
      required:
        - productId
        - productName
        - productPrice
        - company
        - inventory
      properties:
        productId:
          type: integer
        productName:
          type: string
          example: Widget Adapter
        productPrice:
          type: number
        company:
          type: string  
        inventory:
          type: integer
    Customer:
      required:
        - customerId
      properties:
        customerId:
          type: integer
        customerName:
          type: string
        modeOfPayment:
          type: string  
          example: Mainak
        debitAvailable:
          type: number
        customerAddress:
          type: string
        status:
          type: string
    Order:
      type: object
      required:
        - orderId
      properties:
        orderId:
          type: integer
        customerId:
            $ref: '#/components/schemas/Customer'
        orderProductId:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        orderValue:
          type: number
        orderStatus:
          type: string
    OrderProduct:
      type: object
      required:
        - orderProductId
      properties:
        orderProductId:
          type: integer
        productId:
          $ref: '#/components/schemas/Product'
        quantity:
          type: integer
        date:  
          type: string
          description: Start date
          example: "2017-01-01"
          format: date
    OrderDetails:
      type: object
      properties:
        products:
          type: array
          items: 
            $ref: '#/components/schemas/Product'
    Amount:
      type: object
      properties:
        value:
          type: number        